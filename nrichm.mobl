application nrichm

//import mobl::ui::generic
import ui
import NrichResourceService
import utils

external var resources:[NrichResource];

screen root() {
	tabSet([
		("This Issue", "", thisMonth),
		("Past Issues", "", archive),
		("Find", "", search)
	])
}

style iconStyle {
	padding-right:10px;
}

function ks1Filter(res:NrichResource):Bool
{
	if(res.keystage1==1 && res.resourceTypeID==1 && weeklyChallengeFilter(res)==false )
		return true;
}
function ks2Filter(res:NrichResource):Bool
{
	if(res.keystage2==1 && res.resourceTypeID==1 && weeklyChallengeFilter(res)==false)
		return true;
}
function ks3Filter(res:NrichResource):Bool
{
	if(res.keystage3==1 && res.resourceTypeID==1 && weeklyChallengeFilter(res)==false)
		return true;
}
function ks4Filter(res:NrichResource):Bool
{
	if(res.keystage4==1 && res.resourceTypeID==1 && weeklyChallengeFilter(res)==false)
		return true;
}
function ks5Filter(res:NrichResource):Bool
{
	if(res.keystage4plus==1 && res.resourceTypeID==1 && weeklyChallengeFilter(res)==false)
		return true;
}
function articleFilter(res:NrichResource):Bool
{
	if(res.resourceTypeID==3)
		return true;
}

function weeklyChallengeFilter(res:NrichResource):Bool
{
	//return res.title.indexOf("Weekly") == 0;
	
	var re:RegExp = /^\s*Weekly\s+Challenge/i;
	
	var matches:Array<String> = (res.title.match(re));
	if(matches != null && matches.length > 0) {
		res.title = res.title.replace(re, "");
		return true;
	}
	else {
		return false;
	}
}


var ksFilters:Array<Function1<NrichResource,Bool>> = [
	null, ks1Filter, ks2Filter, ks3Filter, ks4Filter, ks5Filter
];

control listFiltered(resources:[NrichResource], filter:Function1<NrichResource,Bool>) 
{
	var base:String = "http://nrich.maths.org"
	list(resource in resources.filter(filter)) {
		item(onclick = {
			openUrl(resource.link + "&withjs=1");
		}) {
			image(base+resource.icon_path, width=30, height=30, valign="middle", style=iconStyle)
			label(resource.title)
		}
	}
}

control ksGroup(ks:Num, month:String, year:String) {
	var resources:[NrichResource] = NRICH.pastMonth(month, year)
  	group {
  		listFiltered(resources, ksFilters[ks])
	}
}

control ks1(month:String, year:String) {
	ksGroup(1, month, year)
}

control ks2(month:String, year:String) {
	ksGroup(2, month, year)
}

control ks3(month:String, year:String) {
	ksGroup(3, month, year)
}

control ks4(month:String, year:String) {
	ksGroup(4, month, year)
}

control ks5(month:String, year:String) {
	ksGroup(5, month, year)
}

control articles(month:String, year:String) {
	var resources:[NrichResource] = NRICH.pastMonth(month, year)
  	group {
  		listFiltered(resources, articleFilter)
	}
}

control weeklyChallenges(month:String, year:String) {
	var resources:[NrichResource] = NRICH.pastMonth(month, year)
  	group {
  		listFiltered(resources, weeklyChallengeFilter)
	}
}

control ksGroupSearch(ks:Num, key:String) {
	var resources:[NrichResource] = NRICH.keywordSearch(key)
  	group {
  		listFiltered(resources, ksFilters[ks])
	}
}

control thisMonth() {
  	header("NRICH "+monthAsString()) 
  	monthAccordion([
  		("Stage1", ks1),
  		("Stage2", ks2),
  		("Stage3", ks3),
  		("Stage4", ks4),
  		("Stage5", ks5),
  		("Articles", articles),
  		("Weekly Challenges", weeklyChallenges)
  	], monthNumeric(), yearNumeric())
}

style themeDetailStyle {
	font-size:0.8em;
	color: #666;
} 

screen pastMonth(issue:PastIssue) {
	header("NRICH " + shortDate(issue.date)) {
		backButton()
	}
	group() {
		item() {
			label(issue.theme, style=themeDetailStyle)
		}
		item() {
		  	monthAccordion([
		  		("Stage1", ks1),
		  		("Stage2", ks2),
		  		("Stage3", ks3),
		  		("Stage4", ks4),
		  		("Stage5", ks5),
		  		("Articles", articles),
		  		("Weekly Challenges", weeklyChallenges)
		  	], issue.month, issue.year)
		}
	}
}

control archive() {
	var pastIssues:[PastIssue] = NRICH.pastIssues()
	header("Past Issues")
	group() {
		list(issue in pastIssues) {
			item(onclick={
				pastMonth(issue);
			}) {
				label(issue.date)
				html("<br/>")
				label(issue.theme, style=themeDetailStyle)
			}
		}
	}
}

/* Searching controls */
control ks1Search(key:String) {
	ksGroupSearch(1,key)
}

control ks2Search(key:String) {
	ksGroupSearch(2, key)
}

control ks3Search(key:String) {
	ksGroupSearch(3, key)
}

control ks4Search(key:String) {
	ksGroupSearch(4, key)
}

control ks5Search(key:String) {
	ksGroupSearch(5, key)
}

control articlesSearch(key:String) {
	var resources:[NrichResource] = NRICH.keywordSearch(key)
  	group {
  		listFiltered(resources, articleFilter)
	}
}

control weeklyChallengesSearch(key:String) {
	var resources:[NrichResource] = NRICH.keywordSearch(key)
  	group {
  		listFiltered(resources, weeklyChallengeFilter)
	}
}

control search() {
	var key = ""
	header("Search NRICH")
	group {
		item() {
			searchBox(key, placeholder="Search NRICH")
			button("by keyword", onclick={
				keywordSearch(key);
			})
			button("by title", onclick={
				titleSearch(key);
			})
		}
		item() {
			label("by topic")
		}
	}
}

screen keywordSearch(key:String) {
	header("Keyword Search") {
		backButton()
	}
	var results = async(NRICH.keywordSearch(key))
  	whenLoaded(results) {
  		searchAccordion([
	  		("Stage1", ks1Search),
	  		("Stage2", ks2Search),
	  		("Stage3", ks3Search),
	  		("Stage4", ks4Search),
	  		("Stage5", ks5Search),
	  		("Articles", articlesSearch),
	  		("Weekly Challenges", weeklyChallengesSearch)
  		], key)
  	}
}

screen titleSearch(key:String) {
	header("Keyword Search") {
		backButton()
	}
	var results = async(NRICH.titleSearch(key))
  	whenLoaded(results) {
  		searchAccordion([
	  		("Stage1", ks1Search),
	  		("Stage2", ks2Search),
	  		("Stage3", ks3Search),
	  		("Stage4", ks4Search),
	  		("Stage5", ks5Search),
	  		("Articles", articlesSearch),
	  		("Weekly Challenges", weeklyChallengesSearch)
  		], key)
  	}
}


