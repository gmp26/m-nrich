application nrichm

//import mobl::ui::generic
import ui
import NrichResourceService
import utils

external var resources:[NrichResource];

resource icon.png

screen root() {
	tabSet([
		("This Issue", "", thisMonth),
		("Past Issues", "", archive),
		("Find", "", search)
	])
}

style iconStyle {
	padding-right:10px;
}

function ks1Filter(res:NrichResource):Bool
{
	if(res.keystage1==1 && res.resourceTypeID==1 && weeklyChallengeFilter(res)==false )
		return true;
}
function ks2Filter(res:NrichResource):Bool
{
	if(res.keystage2==1 && res.resourceTypeID==1 && weeklyChallengeFilter(res)==false)
		return true;
}
function ks3Filter(res:NrichResource):Bool
{
	if(res.keystage3==1 && res.resourceTypeID==1 && weeklyChallengeFilter(res)==false)
		return true;
}
function ks4Filter(res:NrichResource):Bool
{
	if(res.keystage4==1 && res.resourceTypeID==1 && weeklyChallengeFilter(res)==false)
		return true;
}
function ks5Filter(res:NrichResource):Bool
{
	if(res.keystage4plus==1 && res.resourceTypeID==1 && weeklyChallengeFilter(res)==false)
		return true;
}
function articleFilter(res:NrichResource):Bool
{
	if(res.resourceTypeID==3)
		return true;
}

function weeklyChallengeFilter(res:NrichResource):Bool
{
	//return res.title.indexOf("Weekly") == 0;
	
	var re:RegExp = /^\s*Weekly\s+/i;

	var matches:Array<String> = (res.title.match(re));
	if(matches != null && matches.length > 0) {
		res.title = res.title.replace(/Challenge /, "");
		return true;
	}
	else {
		return false;
	}
}


function nullFilter(res:NrichResource):Bool
{
	return true;
}


var ksFilters:Array<Function1<NrichResource,Bool>> = [
	null, ks1Filter, ks2Filter, ks3Filter, ks4Filter, ks5Filter
];

control listFiltered(resources:[NrichResource], filter:Function1<NrichResource,Bool>) 
{
	var base:String = "http://nrich.maths.org"
	list(resource in resources.filter(filter)) {
		item(onclick = {
			resourceDetail(resource);
		}) {
			image(base+resource.icon_path, width=30, height=30, valign="middle", style=iconStyle)
			label(resource.title)
		}
	}
}

style descriptionStyle {
	background-color:#fff;
	margin:0px;
	padding: 20px;
	color:#888;
  	white-space: wrap;
}

screen resourceDetail(resource:NrichResource) {
	header("Navigator") {
		backButton()
	}
	group() {
		item(onclick={
				var title:String = resource.resourceTypeID==1 ? "Problem" : "Article";
				display(resource, resource.link + "&withjs=1", title);
			}) {
			var base:String = "http://nrich.maths.org"
			image(base+resource.icon_path, width=30, height=30, valign="middle", style=iconStyle)
			label(resource.title)
		}
		block(descriptionStyle) {
			html(resource.description)
		}
	}
	resourceNavigation(resource)
}

control resourceNavigation(resource:NrichResource) {
	group() {
		when(resource.clue_link && resource.clue_link != "") {
			item(onclick={
				display(resource, resource.clue_link + "&withjs=1", "Hints");
			}) {
				label("Hint")
			}
		}
		when(resource.note_link && resource.note_link != "") {
			item(onclick={
				display(resource, resource.note_link + "&withjs=1", "Teachers' Notes");
			}) {
				label("Teachers' Notes")
			}
		}
		when(resource.solution_link && resource.solution_link != "") {
			item(onclick={
				display(resource, resource.solution_link + "&withjs=1", "Solutions");
			}) {
				label("Solutions")
			}
		}
		/*
		 * Enable this when I know how to zoom a view inside a mobl screen 
		 */
		item(onclick={
				display(resource, resource.link, "Standard View");
			}) {
				label("Full View")
			}
	}
}

screen display(resource:NrichResource, url:String, title:String) {
	header(title) {
		backButton()
	}
	<iframe src=url width="100%" height="100%"/>	
}

control thisMonth() {
	header("NRICH "+monthAsString()) 
	var resources:[NrichResource] = async(NRICH.pastMonth(monthNumeric(), yearNumeric()))
  	whenLoaded(resources) {
  		searchAccordion([
	  		("Stage1", ks1Search),
	  		("Stage2", ks2Search),
	  		("Stage3", ks3Search),
	  		("Stage4", ks4Search),
	  		("Stage5", ks5Search),
	  		("Articles", articlesSearch),
	  		("Weekly Challenges", weeklyChallengesSearch)
  		], resources)
  	}
}

style themeDetailStyle {
	font-size:0.8em;
	color: #666;
} 

screen pastMonth(issue:PastIssue) {
	header("NRICH "+shortDate(issue.date)) {
		backButton()
	}
	var resources:[NrichResource] = async(NRICH.pastMonth(issue.month, issue.year))
  	whenLoaded(resources) {
  		searchAccordion([
	  		("Stage1", ks1Search),
	  		("Stage2", ks2Search),
	  		("Stage3", ks3Search),
	  		("Stage4", ks4Search),
	  		("Stage5", ks5Search),
	  		("Articles", articlesSearch),
	  		("Weekly Challenges", weeklyChallengesSearch)
  		], resources)
  	}
}


control archive() {
	var pastIssues:[PastIssue] = NRICH.pastIssues()
	header("Past Issues")
	group() {
		list(issue in pastIssues) {
			item(onclick={
				pastMonth(issue);
			}) {
				label(issue.date)
				html("<br/>")
				label(issue.theme, style=themeDetailStyle)
			}
		}
	}
}

control ksGroupSearch(ks:Num, resources:[NrichResource]) {
  	group {
  		listFiltered(resources, ksFilters[ks])
	}
}

/* Searching controls */
control ks1Search(resources:[NrichResource]) {
	ksGroupSearch(1,resources)
}

control ks2Search(resources:[NrichResource]) {
	ksGroupSearch(2, resources)
}

control ks3Search(resources:[NrichResource]) {
	ksGroupSearch(3, resources)
}

control ks4Search(resources:[NrichResource]) {
	ksGroupSearch(4, resources)
}

control ks5Search(resources:[NrichResource]) {
	ksGroupSearch(5, resources)
}

control articlesSearch(resources:[NrichResource]) {
  	group {
  		listFiltered(resources, articleFilter)
	}
}

control weeklyChallengesSearch(resources:[NrichResource]) {
  	group {
  		listFiltered(resources, weeklyChallengeFilter)
	}
}

control search() {
	var key = ""
	header("Search NRICH")
	group {
		item() {
			searchBox(key, placeholder="Search NRICH")
			button("by keyword", onclick={
				keywordSearch(key);
			})
			button("by title", onclick={
				titleSearch(key);
			})
		}
		/*
		item() {
			label("by topic")
		}
		*/
	}
}

control searchResults(resources:[NrichResource]) {
	searchAccordion([
  		(resources.filter(ks1Filter).length.toString() +" found at Stage 1", ks1Search),
  		(resources.filter(ks2Filter).length.toString() +" found at Stage 2", ks2Search),
  		(resources.filter(ks3Filter).length.toString() +" found at Stage 3", ks3Search),
  		(resources.filter(ks4Filter).length.toString() +" found at Stage 4", ks4Search),
  		(resources.filter(ks5Filter).length.toString() +" found at Stage 5", ks5Search),
  		(resources.filter(articleFilter).length.toString() +" Articles", articlesSearch),
  		(resources.filter(weeklyChallengeFilter).length.toString() +" Weekly Challenges", weeklyChallengesSearch)
	], resources)
}

screen keywordSearch(key:String) {
	header("Keyword Search") {
		backButton()
	}
	var resources:[NrichResource] = async(NRICH.keywordSearch(key))
  	whenLoaded(resources) {
  		searchResults(resources)
  	}
}

screen titleSearch(key:String) {
	header("Title Search") {
		backButton()
	}
	var resources:[NrichResource] = async(NRICH.titleSearch(key))
  	whenLoaded(resources) {
  		searchResults(resources)
  	}
}
  	



